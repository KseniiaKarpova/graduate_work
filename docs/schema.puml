@startuml
!pragma layout smetana
!include <logos/django>
!include <logos/postgresql>
!include <cloudinsight/redis>
!include <cloudinsight/kafka>
!include <cloudinsight/elasticsearch>
!include <logos/mongodb>
!include <aws/common>
!include <aws/Storage/AmazonS3/AmazonS3>


title Архитектура Проекта (Голосовой Ассистент)
actor "Actor"

package File{
  [file_api]
  AMAZONS3(s3_internal)
}

[ETL]

package History{
  [history_api]
  database "<$mongodb>" as mongo #White
}

database "<$elasticsearch>" as ES #White

package Assistant{
  [assistant_api]
}

package AI {

  [SpeachToText]

  [TextToSpeach]

  [IntentServer]

  [TextToVec]

  database "<$qdrant>" as qdrant #White
}



skinparam PackageBackgroundColor Azure

[Actor] ...> [assistant_api]
[assistant_api] <..> [SpeachToText]: "convert the audio to text"
[IntentServer] --> [history_api]: "gets the client conversation history"
[assistant_api] <..> [IntentServer]: "define what the client wants"
[assistant_api] <..> [TextToSpeach]: "convert the result to speach"
[TextToSpeach] <..> [file_api]: "save speach to S3"
[TextToSpeach] <..> [assistant_api]: "returns audio unique id in S3"
[assistant_api] --> [Actor]: "returns the id"


[file_api] --> [s3_internal]: "file saving"
[history_api] --> [mongo]


[IntentServer] <..> [qdrant]: "gets the nearest vector"
[ETL] --> [ES]: "fills the elastic"
[ETL] --> [qdrant]: "fills the qdrant"
[ETL] --> [TextToVec]: "ETL add new film or intent to database"
[TextToVec] --> [qdrant]: "add vector"
@enduml